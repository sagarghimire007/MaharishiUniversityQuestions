package com.mumsquestion.page7;

/*

Consider the following algorithm
	Start with a positive number n
	if n is even then divide by 2
	if n is odd then multiply by 3 and add 1
	continue this until n becomes 1

The Guthrie index of a positive number n is defined to be how many iterations of the above algorithm it takes before n becomes 1.

For example, the Guthrie index of the number 7 is 16 because the following sequence is 16 numbers long.
22, 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1

It is easy to see that this sequence was generated by the above algorithm. Since 7 is odd multiply by 3 and add 1 to get 22 which is the first
number of the sequence. Since 22 is even, divide by 2 to get 11 which is the second number of the sequence. 11 is odd so multiply by 3 and add 1
to get 34 which is the third number of the sequence and so on.

Write a function named guthrieIndex which computes the Guthrie index of its argument. Its signature is

	int guthrieIndex(int n)

 */


public class GuthrieIndex {
    public static void main(String[] args) {
        System.out.println("Result 1 : " + guthrieIndex(7));
        System.out.println("Result 2 : " + guthrieIndex(1));
        System.out.println("Result 3 : " + guthrieIndex(2));
        System.out.println("Result 4 : " + guthrieIndex(3));
        System.out.println("Result 5 : " + guthrieIndex(4));
        System.out.println("Result 6 : " + guthrieIndex(42));
        System.out.println("Result 7 : " + guthrieIndex(0));
        System.out.println("Result 8 : " + guthrieIndex(-4));
    }

    public static int guthrieIndex(int n) {

        int iteration = 0;
        if (n <= 1) {
            return 0;
        }
        while (n != 1) {
            if (n % 2 == 0) {
                n = n / 2;
            } else {
                n = n * 3 + 1;
            }
            iteration++;
        }
        return iteration;
    }
}
